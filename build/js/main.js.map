{"version":3,"sources":["webpack://ui-dev/./source/js/api.js","webpack://ui-dev/./source/js/card.js","webpack://ui-dev/./source/js/utils.js","webpack://ui-dev/./source/js/store.js","webpack://ui-dev/./source/js/filter.js","webpack://ui-dev/./source/js/main.js","webpack://ui-dev/./source/js/render.js"],"names":["CARD_TEMPLATE","document","querySelector","CardTypes","IndependentLiving","SupportAvailable","Selectors","CARD","IMG","TYPE","TITLE","ADDRESS","PRICE","fillCard","data","card","content","cloneNode","cardNodes","parent","selectors","keys","Object","entries","nodes","key","value","getNodes","href","id","src","node","classList","add","textContent","fillCardType","type","title","address","price","rawData","FILTER_INPUT","changeFilterInputHandler","length","querySelectorAll","forEach","startsWith","remove","CATALOG","fetch","then","response","ok","json","Error","status","statusText","i","appendChild","renderCard","slice","storeData","addEventListener"],"mappings":"mBAAA,MCEMA,EAAgBC,SAASC,cAAc,SAOvCC,EAAY,CAChBC,kBAAmB,0BACnBC,iBAAkB,uBAGdC,EAAY,CAChBC,KAAM,QACNC,IAAK,aACLC,KAAM,cACNC,MAAO,eACPC,QAAS,iBACTC,MAAO,gBAQHC,EAAYC,IAChB,MAAMC,EAAOf,EAAcgB,QAAQC,WAAU,GACvCC,EC9BS,EAACC,EAAQC,KACxB,MAAMC,EAAOC,OAAOC,QAAQH,GAE5B,IAAII,EAAQ,GACZ,IAAK,IAAKC,EAAKC,KAAUL,EACvBG,EAAMC,GAAON,EAAOjB,cAAcwB,GAGpC,OAAOF,GDsBWG,CAASZ,EAAMT,IAC3B,KAACC,EAAI,IAAEC,EAAG,KAAEC,EAAI,MAAEC,EAAK,QAAEC,EAAO,MAAEC,GAASM,EASjD,OAPAX,EAAKqB,KA3BC,YA2BkBd,EAAKe,GAC7BrB,EAAIsB,IA7BC,+DA6BgBhB,EAAKe,GAXP,EAACE,EAAMjB,KAC1BiB,EAAKC,UAAUC,IAAI9B,EAAUW,IAC7BiB,EAAKG,YAAcpB,GAUnBqB,CAAa1B,EAAMK,EAAKsB,MACxB1B,EAAMwB,YAAcpB,EAAKuB,MACzB1B,EAAQuB,YAAcpB,EAAKwB,QAC3B1B,EAAMsB,YAAcpB,EAAKyB,MAElBxB,GEtCT,IAAIyB,EAAU,KAEd,MCJMC,EAAexC,SAASC,cAAc,gBAgCtCwC,EAA2B,KAC/B,GAAID,EAAaf,MAAMiB,OA/BE,EAkCvB,OA/BY1C,SAAS2C,iBAAiB,SAElCC,SAAS9B,IACbA,EAAKiB,UAAUC,IAAI,aAYFP,EAeLe,EAAaf,WAdbzB,SAAS2C,iBAAiB,SAElCC,SAAS9B,IACCA,EAAKb,cAAc,gBAEvBgC,YAAYY,WAAWpB,IAC/BX,EAAKiB,UAAUe,OAAO,aAPR,IAACrB,EAPLzB,SAAS2C,iBAAiB,SAElCC,SAAS9B,IACbA,EAAKiB,UAAUe,OAAO,cCXpBC,EAAU/C,SAASC,cAAc,kBLF9B+C,MAHW,qDAIjBC,MAAMC,IACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAGlB,MAAM,IAAIC,MAAM,GAAGH,EAASI,WAAWJ,EAASK,iBKKjDN,MAP4BpC,ICLZ,EAACK,EAAQL,KAC1B,IAAK,IAAI2C,EAAI,EAAGA,EAAI3C,EAAK6B,OAAQc,IAC/BtC,EAAOuC,YAAY7C,EAASC,EAAK2C,MDInCE,CAAWX,EFJK,CAAClC,GAGf0B,EADK1B,EAAK6B,OANS,EAOT7B,EAAK8C,MAAM,EAPF,GAQT9C,EAAK8C,QEAGC,CAAU/C,IDkC9B2B,EAAaqB,iBAAiB,QAASpB,O","file":"main.js","sourcesContent":["const GETDATA_URL = 'https://603e38c548171b0017b2ecf7.mockapi.io/homes';\r\n\r\nconst loadData = () => {\r\n  return fetch(GETDATA_URL)\r\n  .then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    throw new Error(`${response.status}, ${response.statusText}`);\r\n  })\r\n};\r\n\r\nexport {loadData}\r\n","import {getNodes} from './utils.js';\n\nconst CARD_TEMPLATE = document.querySelector('#tmpl');\n\nconst Urls = {\n  IMG: 'https://via.placeholder.com/380x227/D8D8FF/FFFFFF?text=card ',\n  CARD: '/details/',\n};\n\nconst CardTypes = {\n  IndependentLiving: 'card__type--independent',\n  SupportAvailable: 'card__type--support',\n};\n\nconst Selectors = {\n  CARD: '.card',\n  IMG: '.card__img',\n  TYPE: '.card__type',\n  TITLE: '.card__title',\n  ADDRESS: '.card__address',\n  PRICE: '.card__price',\n};\n\nconst fillCardType = (node, data) => {\n  node.classList.add(CardTypes[data]);\n  node.textContent = data;\n}\n\nconst fillCard = (data) => {\n  const card = CARD_TEMPLATE.content.cloneNode(true);\n  const cardNodes = getNodes(card, Selectors);\n  const {CARD, IMG, TYPE, TITLE, ADDRESS, PRICE} = cardNodes;\n\n  CARD.href = Urls.CARD + data.id;\n  IMG.src = Urls.IMG + data.id;\n  fillCardType(TYPE, data.type)\n  TITLE.textContent = data.title;\n  ADDRESS.textContent = data.address;\n  PRICE.textContent = data.price;\n\n  return card;\n};\n\nexport {fillCard}\n","const getNodes = (parent, selectors) => {\n  const keys = Object.entries(selectors);\n\n  let nodes = {};\n  for (let [key, value] of keys) {\n    nodes[key] = parent.querySelector(value);\n  }\n\n  return nodes;\n};\n\nexport {getNodes}\n","const MAX_CARD_COUNT = 6;\n\nlet rawData = null;\n\nconst storeData = (data) => {\n\n  return data.length > MAX_CARD_COUNT\n  ? rawData = data.slice(0, MAX_CARD_COUNT)\n  : rawData = data.slice();\n};\n\nexport {storeData}\n","const FILTER_INPUT = document.querySelector('.form__input');\n\nconst MIN_SEARCH_SYMBOLS = 2;\n\nconst hiddenAllCards = () => {\n  const CARDS = document.querySelectorAll('.card');\n\n  CARDS.forEach((card) => {\n    card.classList.add('hidden')\n  })\n};\n\nconst showAllCards = () => {\n  const CARDS = document.querySelectorAll('.card');\n\n  CARDS.forEach((card) => {\n    card.classList.remove('hidden')\n  })\n};\n\nconst filterCards = (value) => {\n  const CARDS = document.querySelectorAll('.card');\n\n  CARDS.forEach((card) => {\n    const title = card.querySelector('.card__title');\n\n    if (title.textContent.startsWith(value)) {\n      card.classList.remove('hidden')\n    }\n  })\n};\n\nconst changeFilterInputHandler = () => {\n  if (FILTER_INPUT.value.length > MIN_SEARCH_SYMBOLS) {\n    hiddenAllCards();\n    filterCards(FILTER_INPUT.value);\n    return;\n  }\n  showAllCards();\n};\n\nconst addEventListeners = () => {\n  FILTER_INPUT.addEventListener('input', changeFilterInputHandler);\n};\n\n\nexport {addEventListeners}\n","import {loadData} from './api.js';\nimport {renderCard} from './render.js';\nimport {storeData} from './store.js';\nimport {addEventListeners} from './filter.js';\n\nconst CATALOG = document.querySelector('.main__catalog');\n\nconst handleDataLoadSuccess = (data) => {\n  renderCard(CATALOG, storeData(data));\n  addEventListeners();\n}\n\nconst handlePageLoaded = () => {\n  loadData()\n  .then(handleDataLoadSuccess)\n};\n\nhandlePageLoaded();\n","import {fillCard} from './card.js';\n\nconst renderCard = (parent, data) => {\n  for (let i = 0; i < data.length; i++) {\n    parent.appendChild(fillCard(data[i]));\n  }\n};\n\nexport {renderCard}\n"],"sourceRoot":""}